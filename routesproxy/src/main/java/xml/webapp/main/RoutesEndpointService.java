package xml.webapp.main;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.5.0-SNAPSHOT-39ff641f3d81d8e0b9487ae8c49ac2a5bf055bc1
 * 2021-01-12T07:22:59.446+03:00
 * Generated source version: 3.5.0-SNAPSHOT
 *
 */
@WebServiceClient(name = "RoutesEndpointService",
                  wsdlLocation = "http://127.0.0.1:9191/routes.wsdl",
                  targetNamespace = "main.webapp.xml")
public class RoutesEndpointService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("main.webapp.xml", "RoutesEndpointService");
    public final static QName RoutesEndpointPort = new QName("main.webapp.xml", "RoutesEndpointPort");
    static {
        URL url = null;
        try {
            url = new URL("http://127.0.0.1:9191/routes.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RoutesEndpointService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://127.0.0.1:9191/routes.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RoutesEndpointService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RoutesEndpointService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RoutesEndpointService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public RoutesEndpointService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public RoutesEndpointService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RoutesEndpointService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns RoutesEndpointPortType
     */
    @WebEndpoint(name = "RoutesEndpointPort")
    public RoutesEndpointPortType getRoutesEndpointPort() {
        return super.getPort(RoutesEndpointPort, RoutesEndpointPortType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RoutesEndpointPortType
     */
    @WebEndpoint(name = "RoutesEndpointPort")
    public RoutesEndpointPortType getRoutesEndpointPort(WebServiceFeature... features) {
        return super.getPort(RoutesEndpointPort, RoutesEndpointPortType.class, features);
    }

}
